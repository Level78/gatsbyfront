{"version":3,"sources":["webpack:///./src/views/Account/components/Hero/Hero.js","webpack:///./src/views/Account/components/General/General.js","webpack:///./src/views/Account/components/Security/Security.js","webpack:///./src/views/Account/components/Notifications/Notifications.js","webpack:///./src/views/Account/components/Billing/Billing.js","webpack:///./src/views/Account/Account.js","webpack:///./node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","webpack:///./node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","webpack:///./node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","webpack:///./node_modules/@material-ui/core/esm/Checkbox/Checkbox.js"],"names":["useStyles","makeStyles","theme","root","width","height","position","overflow","background","palette","primary","dark","textWhite","color","title","fontWeight","Hero","props","className","rest","classes","clsx","subtitle","align","disableGutter","titleProps","variant","subtitleProps","inputTitle","marginBottom","spacing","General","useTheme","isMd","useMediaQuery","breakpoints","up","defaultMatches","Grid","container","item","xs","Typography","Divider","sm","TextField","placeholder","size","name","fullWidth","type","multiline","rows","justify","Button","switchTitle","titleCta","display","justifyContent","alignItems","Security","FormControlLabel","control","Switch","defaultChecked","label","labelPlacement","Notifications","md","gutterBottom","Checkbox","Billing","section","paddingTop","marginTop","zIndex","padding","menu","list","flexWrap","flexDirection","marginRight","marginLeft","listItem","flex","paddingRight","paddingLeft","borderLeft","listItemActive","text","subPages","id","href","TabPanel","children","value","index","other","Box","component","hidden","Account","pageId","parse","window","location","search","pid","withShadow","List","disablePadding","map","ListItem","key","disableGutters","noWrap","createSvgIcon","d","defaultCheckedIcon","CheckBox","defaultIcon","CheckBoxOutlineBlank","defaultIndeterminateIcon","IndeterminateCheckBox","ref","_props$checkedIcon","checkedIcon","_props$color","_props$icon","icon","iconProp","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","indeterminateIconProp","inputProps","_props$size","SwitchBase","concat","capitalize","checked","disabled","fontSize","undefined","withStyles","secondary","colorPrimary","main","backgroundColor","action","hoverOpacity","colorSecondary"],"mappings":"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","file":"f67985bda64949095d5427aca35db7c4a85b5c94-469856ddbda4c567b491.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { SectionHeader } from 'components/molecules';\nimport { Section } from 'components/organisms';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    height: '100%',\n    position: 'relative',\n    overflow: 'hidden',\n    background: theme.palette.primary.dark,\n  },\n  textWhite: {\n    color: 'white',\n  },\n  title: {\n    fontWeight: 'bold',\n  },\n}));\n\nconst Hero = props => {\n  const { className, ...rest } = props;\n  const classes = useStyles();\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <Section>\n        <SectionHeader\n          title=\"Account Settings\"\n          subtitle=\"Change account information and settings\"\n          align=\"left\"\n          disableGutter\n          titleProps={{\n            className: clsx(classes.title, classes.textWhite),\n            variant: 'h3',\n          }}\n          subtitleProps={{\n            className: classes.textWhite,\n          }}\n        />\n      </Section>\n    </div>\n  );\n};\n\nHero.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n};\n\nexport default Hero;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport {\n  useMediaQuery,\n  Grid,\n  Typography,\n  TextField,\n  Button,\n  Divider,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  inputTitle: {\n    fontWeight: 700,\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nconst General = props => {\n  const { className, ...rest } = props;\n  const classes = useStyles();\n\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true,\n  });\n\n  return (\n    <div className={className} {...rest}>\n      <Grid container spacing={isMd ? 4 : 2}>\n        <Grid item xs={12}>\n          <Typography variant=\"h6\" color=\"textPrimary\">\n            Basic Information\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Divider />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Typography\n            variant=\"subtitle1\"\n            color=\"textPrimary\"\n            className={classes.inputTitle}\n          >\n            Full name\n          </Typography>\n          <TextField\n            placeholder=\"Your full name\"\n            variant=\"outlined\"\n            size=\"medium\"\n            name=\"fullname\"\n            fullWidth\n            type=\"text\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Typography\n            variant=\"subtitle1\"\n            color=\"textPrimary\"\n            className={classes.inputTitle}\n          >\n            E-mail\n          </Typography>\n          <TextField\n            placeholder=\"Your e-mail address\"\n            variant=\"outlined\"\n            size=\"medium\"\n            name=\"email\"\n            fullWidth\n            type=\"email\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Typography\n            variant=\"subtitle1\"\n            color=\"textPrimary\"\n            className={classes.inputTitle}\n          >\n            Bio\n          </Typography>\n          <TextField\n            placeholder=\"Your bio\"\n            variant=\"outlined\"\n            name=\"bio\"\n            fullWidth\n            multiline\n            rows={4}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Divider />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Typography\n            variant=\"subtitle1\"\n            color=\"textPrimary\"\n            className={classes.inputTitle}\n          >\n            Country\n          </Typography>\n          <TextField\n            placeholder=\"Country\"\n            variant=\"outlined\"\n            size=\"medium\"\n            name=\"country\"\n            fullWidth\n            type=\"text\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Typography\n            variant=\"subtitle1\"\n            color=\"textPrimary\"\n            className={classes.inputTitle}\n          >\n            City\n          </Typography>\n          <TextField\n            placeholder=\"City\"\n            variant=\"outlined\"\n            size=\"medium\"\n            name=\"city\"\n            fullWidth\n            type=\"text\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Typography\n            variant=\"subtitle1\"\n            color=\"textPrimary\"\n            className={classes.inputTitle}\n          >\n            Full Address\n          </Typography>\n          <TextField\n            placeholder=\"Your address\"\n            variant=\"outlined\"\n            size=\"medium\"\n            name=\"address\"\n            fullWidth\n            type=\"text\"\n          />\n        </Grid>\n        <Grid item container justify=\"flex-start\" xs={12}>\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n            color=\"primary\"\n            size=\"large\"\n          >\n            save\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nGeneral.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n};\n\nexport default General;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport {\n  useMediaQuery,\n  Grid,\n  Typography,\n  TextField,\n  FormControlLabel,\n  Switch,\n  Button,\n  Divider,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  inputTitle: {\n    fontWeight: 700,\n    marginBottom: theme.spacing(1),\n  },\n  switchTitle: {\n    fontWeight: 700,\n  },\n  titleCta: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n}));\n\nconst Security = props => {\n  const { className, ...rest } = props;\n  const classes = useStyles();\n\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true,\n  });\n\n  return (\n    <div className={className} {...rest}>\n      <Grid container spacing={isMd ? 4 : 2}>\n        <Grid item xs={12}>\n          <div className={classes.titleCta}>\n            <Typography variant=\"h6\" color=\"textPrimary\">\n              Change Password\n            </Typography>\n            <Button variant=\"outlined\" color=\"primary\">\n              Log out\n            </Button>\n          </div>\n        </Grid>\n        <Grid item xs={12}>\n          <Divider />\n        </Grid>\n        <Grid item xs={12}>\n          <Typography\n            variant=\"subtitle1\"\n            color=\"textPrimary\"\n            className={classes.inputTitle}\n          >\n            Current password\n          </Typography>\n          <TextField\n            placeholder=\"Old password\"\n            variant=\"outlined\"\n            size=\"medium\"\n            name=\"fullname\"\n            fullWidth\n            type=\"password\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Typography\n            variant=\"subtitle1\"\n            color=\"textPrimary\"\n            className={classes.inputTitle}\n          >\n            New password\n          </Typography>\n          <TextField\n            placeholder=\"New password\"\n            variant=\"outlined\"\n            size=\"medium\"\n            name=\"fullname\"\n            fullWidth\n            type=\"password\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Typography\n            variant=\"subtitle1\"\n            color=\"textPrimary\"\n            className={classes.inputTitle}\n          >\n            Repeat password\n          </Typography>\n          <TextField\n            placeholder=\"Repeat password\"\n            variant=\"outlined\"\n            size=\"medium\"\n            name=\"fullname\"\n            fullWidth\n            type=\"password\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Divider />\n        </Grid>\n        <Grid item xs={12}>\n          <FormControlLabel\n            control={<Switch color=\"primary\" defaultChecked />}\n            label={\n              <Typography\n                variant=\"subtitle1\"\n                color=\"textPrimary\"\n                className={classes.switchTitle}\n              >\n                Public Profile\n              </Typography>\n            }\n            labelPlacement=\"end\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Divider />\n        </Grid>\n        <Grid item xs={12}>\n          <FormControlLabel\n            control={<Switch color=\"primary\" />}\n            label={\n              <Typography\n                variant=\"subtitle1\"\n                color=\"textPrimary\"\n                className={classes.switchTitle}\n              >\n                Expose your email\n              </Typography>\n            }\n            labelPlacement=\"end\"\n          />\n        </Grid>\n        <Grid item container justify=\"flex-start\" xs={12}>\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n            color=\"primary\"\n            size=\"large\"\n          >\n            save\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nSecurity.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n};\n\nexport default Security;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport {\n  useMediaQuery,\n  Grid,\n  Typography,\n  FormControlLabel,\n  Checkbox,\n  Button,\n  Divider,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  titleCta: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n}));\n\nconst Notifications = props => {\n  const { className, ...rest } = props;\n  const classes = useStyles();\n\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true,\n  });\n\n  return (\n    <div className={className} {...rest}>\n      <Grid container spacing={isMd ? 4 : 2}>\n        <Grid item xs={12}>\n          <div className={classes.titleCta}>\n            <Typography variant=\"h6\" color=\"textPrimary\">\n              Notifications\n            </Typography>\n            <Button variant=\"outlined\" color=\"primary\">\n              Reset all\n            </Button>\n          </div>\n        </Grid>\n        <Grid item xs={12}>\n          <Divider />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Typography variant=\"h6\" gutterBottom>\n            System settings\n          </Typography>\n          <Typography variant=\"caption\" gutterBottom>\n            You will recieve emails in your business email address\n          </Typography>\n          <div>\n            <div>\n              <FormControlLabel\n                control={<Checkbox defaultChecked={true} color=\"primary\" />}\n                label=\"E-mail alerts\"\n              />\n            </div>\n            <div>\n              <FormControlLabel\n                control={<Checkbox defaultChecked={true} color=\"primary\" />}\n                label=\"Push notifications\"\n              />\n            </div>\n            <div>\n              <FormControlLabel\n                control={<Checkbox defaultChecked={true} color=\"primary\" />}\n                label=\"Text messages\"\n              />\n            </div>\n            <div>\n              <FormControlLabel\n                control={<Checkbox defaultChecked={false} color=\"primary\" />}\n                label=\"Phone calles\"\n              />\n            </div>\n          </div>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Typography variant=\"h6\" gutterBottom>\n            Chat settings\n          </Typography>\n          <Typography variant=\"caption\" gutterBottom>\n            You will recieve emails in your business email address\n          </Typography>\n          <div>\n            <div>\n              <FormControlLabel\n                control={<Checkbox defaultChecked={false} color=\"primary\" />}\n                label=\"E-mail alerts\"\n              />\n            </div>\n            <div>\n              <FormControlLabel\n                control={<Checkbox defaultChecked={true} color=\"primary\" />}\n                label=\"Push notifications\"\n              />\n            </div>\n          </div>\n        </Grid>\n        <Grid item container justify=\"flex-start\" xs={12}>\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n            color=\"primary\"\n            size=\"large\"\n          >\n            save\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nNotifications.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n};\n\nexport default Notifications;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport {\n  useMediaQuery,\n  Grid,\n  Typography,\n  TextField,\n  Button,\n  Divider,\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  inputTitle: {\n    fontWeight: 700,\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nconst Billing = props => {\n  const { className, ...rest } = props;\n  const classes = useStyles();\n\n  const theme = useTheme();\n  const isMd = useMediaQuery(theme.breakpoints.up('md'), {\n    defaultMatches: true,\n  });\n\n  return (\n    <div className={className} {...rest}>\n      <Grid container spacing={isMd ? 4 : 2}>\n        <Grid item xs={12}>\n          <Typography variant=\"h6\" color=\"textPrimary\">\n            Billing Information\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Divider />\n        </Grid>\n        <Grid item xs={12}>\n          <Typography\n            variant=\"subtitle1\"\n            color=\"textPrimary\"\n            className={classes.inputTitle}\n          >\n            Card Number\n          </Typography>\n          <TextField\n            placeholder=\"Account number or IBAN\"\n            variant=\"outlined\"\n            size=\"medium\"\n            name=\"cardNumber\"\n            fullWidth\n            type=\"text\"\n          />\n        </Grid>\n        <Grid item xs={8}>\n          <Typography\n            variant=\"subtitle1\"\n            color=\"textPrimary\"\n            className={classes.inputTitle}\n          >\n            Expiration date\n          </Typography>\n          <TextField\n            placeholder=\"Card expiration date\"\n            variant=\"outlined\"\n            size=\"medium\"\n            name=\"expDate\"\n            fullWidth\n            type=\"text\"\n          />\n        </Grid>\n        <Grid item xs={4}>\n          <Typography\n            variant=\"subtitle1\"\n            color=\"textPrimary\"\n            className={classes.inputTitle}\n          >\n            CVV\n          </Typography>\n          <TextField\n            placeholder=\"Card CVV\"\n            variant=\"outlined\"\n            name=\"cvv\"\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={12} sm={8}>\n          <Typography\n            variant=\"subtitle1\"\n            color=\"textPrimary\"\n            className={classes.inputTitle}\n          >\n            Full name\n          </Typography>\n          <TextField\n            placeholder=\"Name on the card\"\n            variant=\"outlined\"\n            size=\"medium\"\n            name=\"name\"\n            fullWidth\n            type=\"text\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={4}>\n          <Typography\n            variant=\"subtitle1\"\n            color=\"textPrimary\"\n            className={classes.inputTitle}\n          >\n            Billing zip code\n          </Typography>\n          <TextField\n            placeholder=\"Billing address zip code\"\n            variant=\"outlined\"\n            size=\"medium\"\n            name=\"zip\"\n            fullWidth\n            type=\"text\"\n          />\n        </Grid>\n        <Grid item container justify=\"flex-start\" xs={12}>\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n            color=\"primary\"\n            size=\"large\"\n          >\n            save\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nBilling.propTypes = {\n  /**\n   * External classes\n   */\n  className: PropTypes.string,\n};\n\nexport default Billing;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { parse } from 'query-string';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box, List, ListItem, Grid, Typography } from '@material-ui/core';\nimport { SectionAlternate, CardBase } from 'components/organisms';\nimport { Hero, General, Security, Notifications, Billing } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100%',\n    width: '100%',\n  },\n  section: {\n    '& .section-alternate__content': {\n      paddingTop: 0,\n      marginTop: theme.spacing(-5),\n      position: 'relative',\n      zIndex: 1,\n    },\n    '& .card-base__content': {\n      padding: theme.spacing(2),\n      [theme.breakpoints.up('md')]: {\n        padding: theme.spacing(3),\n      },\n    },\n  },\n  menu: {\n    height: 'auto',\n  },\n  list: {\n    display: 'inline-flex',\n    overflow: 'auto',\n    flexWrap: 'nowrap',\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n      flexDirection: 'column',\n      marginRight: theme.spacing(-3),\n      marginLeft: theme.spacing(-3),\n    },\n  },\n  listItem: {\n    marginRight: theme.spacing(2),\n    flex: 0,\n    [theme.breakpoints.up('md')]: {\n      paddingRight: theme.spacing(3),\n      paddingLeft: theme.spacing(3),\n      borderLeft: '2px solid transparent',\n    },\n  },\n  listItemActive: {\n    [theme.breakpoints.up('md')]: {\n      borderLeft: `2px solid ${theme.palette.primary.dark}`,\n    },\n    '& .menu__item': {\n      color: theme.palette.text.primary,\n    },\n  },\n}));\n\nconst subPages = [\n  {\n    id: 'general',\n    href: '/account/?pid=general',\n    title: 'General',\n  },\n  {\n    id: 'security',\n    href: '/account/?pid=security',\n    title: 'Security',\n  },\n  {\n    id: 'notifications',\n    href: '/account/?pid=notifications',\n    title: 'Notifications',\n  },\n  {\n    id: 'billing',\n    href: '/account/?pid=billing',\n    title: 'Billing Information',\n  },\n];\n\nconst TabPanel = props => {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Box component=\"div\" hidden={value !== index} {...other}>\n      {value === index && children}\n    </Box>\n  );\n};\n\nconst Account = (props = {}) => {\n  const classes = useStyles();\n  let pageId = parse(window.location.search).pid || 'general';\n\n  return (\n    <div className={classes.root}>\n      <Hero />\n      <SectionAlternate className={classes.section}>\n        <Grid container spacing={4}>\n          <Grid item xs={12} md={3}>\n            <CardBase withShadow align=\"left\" className={classes.menu}>\n              <List disablePadding className={classes.list}>\n                {subPages.map((item, index) => (\n                  <ListItem\n                    key={index}\n                    component={'a'}\n                    href={item.href}\n                    className={clsx(\n                      classes.listItem,\n                      pageId === item.id ? classes.listItemActive : {},\n                    )}\n                    disableGutters\n                  >\n                    <Typography\n                      variant=\"subtitle1\"\n                      noWrap\n                      color=\"textSecondary\"\n                      className=\"menu__item\"\n                    >\n                      {item.title}\n                    </Typography>\n                  </ListItem>\n                ))}\n              </List>\n            </CardBase>\n          </Grid>\n          <Grid item xs={12} md={9}>\n            <CardBase withShadow align=\"left\">\n              <TabPanel value={pageId} index={'general'}>\n                <General />\n              </TabPanel>\n              <TabPanel value={pageId} index={'security'}>\n                <Security />\n              </TabPanel>\n              <TabPanel value={pageId} index={'notifications'}>\n                <Notifications />\n              </TabPanel>\n              <TabPanel value={pageId} index={'billing'}>\n                <Billing />\n              </TabPanel>\n            </CardBase>\n          </Grid>\n        </Grid>\n      </SectionAlternate>\n    </div>\n  );\n};\n\nexport default Account;\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(CheckBoxIcon, null);\nvar defaultIcon = /*#__PURE__*/React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = /*#__PURE__*/React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = /*#__PURE__*/React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      iconProp = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIconProp = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  var icon = indeterminate ? indeterminateIconProp : iconProp;\n  var indeterminateIcon = indeterminate ? indeterminateIconProp : checkedIcon;\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: icon.props.fontSize === undefined && size === \"small\" ? size : icon.props.fontSize\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(indeterminateIcon, {\n      fontSize: indeterminateIcon.props.fontSize === undefined && size === \"small\" ? size : indeterminateIcon.props.fontSize\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);"],"sourceRoot":""}